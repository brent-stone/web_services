{
  "accessCodeLifespan": 60,
  "accessCodeLifespanLogin": 1800,
  "accessCodeLifespanUserAction": 300,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "adminEventsDetailsEnabled": false,
  "adminEventsEnabled": false,
  "attributes": {
    "cibaAuthRequestedUserHint": "login_hint",
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaInterval": "5",
    "clientOfflineSessionIdleTimeout": "0",
    "clientOfflineSessionMaxLifespan": "0",
    "clientSessionIdleTimeout": "0",
    "clientSessionMaxLifespan": "0",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "parRequestUriLifespan": "60",
    "realmReusableOtpCode": "false"
  },
  "authenticationFlows": [
    {
      "alias": "Account verification options",
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Method with which to verity the existing account",
      "id": "889a55ac-4039-4c0e-ba5b-660659b11f9e",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Authentication Options",
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Authentication options.",
      "id": "7b63213d-872d-4a7b-b7f2-59b3ecd933fa",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Browser - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP is required for the authentication",
      "id": "9495c37d-1143-45b0-83e0-c643b7b17fc8",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Direct Grant - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP is required for the authentication",
      "id": "25ca553a-b3e0-4a17-9820-0b549c32045a",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "First broker login - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP is required for the authentication",
      "id": "6363682e-8b51-4c2c-b007-a3a1b9c55e25",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Handle Existing Account",
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "id": "4cfef242-2f36-42a7-b2ea-a62946ae0fd6",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Reset - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "id": "3d69e8ff-1668-47ec-95ba-68bc1e67cb2f",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "User creation or linking",
      "authenticationExecutions": [
        {
          "authenticator": "idp-create-user-if-unique",
          "authenticatorConfig": "create unique user config",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow for the existing/non-existing user alternatives",
      "id": "81153871-d0fc-4940-87ed-66d149c594ee",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Verify Existing Account by Re-authentication",
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "priority": 20,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Reauthentication of existing account",
      "id": "0b36e75a-ab6c-4e19-972d-b55593e10163",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "browser",
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 25,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "priority": 30,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "browser based authentication",
      "id": "e08d73af-d664-4cfc-b82e-5dc9c21ba5f5",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "clients",
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 40,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Base authentication for clients",
      "id": "a7eb0724-8a17-496e-8dc5-5d1d3a33a45b",
      "providerId": "client-flow",
      "topLevel": true
    },
    {
      "alias": "direct grant",
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "priority": 30,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "OpenID Connect Resource Owner Grant",
      "id": "bf280a79-ef30-418a-bf41-f12cc0d764a9",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "docker auth",
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Used by Docker clients to authenticate against the IDP",
      "id": "a561fd96-0a32-4b5f-a365-6377217a759a",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "first broker login",
      "authenticationExecutions": [
        {
          "authenticator": "idp-review-profile",
          "authenticatorConfig": "review profile config",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "id": "c7267b9a-bc58-4002-b126-98b5781a2274",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "forms",
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "priority": 20,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Username, password, otp and other auth forms.",
      "id": "652c29ac-ed0c-408e-a525-cb754e609c8f",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "http challenge",
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Authentication Options",
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "id": "0e1f07bd-b182-4c06-817c-2f57d2208ac2",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "registration",
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "registration flow",
      "id": "fca42fa3-887e-49a1-95be-e88e7cb39f5e",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "registration form",
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 40,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 50,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 60,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "registration form",
      "id": "f1990f4b-2caa-4125-8a5b-8ad8ab5e5cdd",
      "providerId": "form-flow",
      "topLevel": false
    },
    {
      "alias": "reset credentials",
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "priority": 40,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Reset credentials for a user if they forgot their password or something",
      "id": "9aae8a63-5f3c-4371-af0e-78cd4389cab2",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "saml ecp",
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "SAML ECP Profile Authentication Flow",
      "id": "23c66002-6d7a-4bf1-abbb-80cc2d440196",
      "providerId": "basic-flow",
      "topLevel": true
    }
  ],
  "authenticatorConfig": [
    {
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      },
      "id": "d4f8ab9d-8eb5-4d95-9123-2dd3510626d1"
    },
    {
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      },
      "id": "5bbf08d2-7719-4e49-ada1-52d95dee020d"
    }
  ],
  "browserFlow": "browser",
  "browserSecurityHeaders": {
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "contentSecurityPolicyReportOnly": "",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains",
    "xContentTypeOptions": "nosniff",
    "xFrameOptions": "SAMEORIGIN",
    "xRobotsTag": "none",
    "xXSSProtection": "1; mode=block"
  },
  "bruteForceProtected": false,
  "clientAuthenticationFlow": "clients",
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "clientPolicies": {
    "policies": []
  },
  "clientProfiles": {
    "profiles": []
  },
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clientScopes": [
    {
      "attributes": {
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: email",
      "id": "1661338e-77f7-4070-ac03-62f33d43d352",
      "name": "email",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "email",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "email",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "cc272f1a-45a6-467c-ab7b-220ae359eea8",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "id.token.claim": "true",
            "jsonType.label": "boolean",
            "user.attribute": "emailVerified",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "c5bc8e46-c65b-436f-9963-af83f92240ae",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add user roles to the access token",
      "id": "a438d076-04e8-4f27-9a0c-c7c944e6b5a8",
      "name": "roles",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo"
          },
          "consentRequired": false,
          "id": "3226358d-2696-49b4-9bdd-1d3bf5057daf",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo"
          },
          "consentRequired": false,
          "id": "86cd57fd-2643-41f4-a8ca-c886d97f65b5",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper"
        },
        {
          "config": {},
          "consentRequired": false,
          "id": "2f5f04d1-dc72-4b63-9907-13275d0d923f",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper"
        }
      ]
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "include.in.token.scope": "true"
      },
      "description": "Microprofile - JWT built-in scope",
      "id": "c25ef46c-c771-4b05-8445-39895ac12f92",
      "name": "microprofile-jwt",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "upn",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "username",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "7cb8b96a-b828-4663-b111-15e201c9a4e4",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "groups",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "0c0889ba-5c42-4027-abbc-a30ef6fe0da5",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: profile",
      "id": "2689131c-2ae8-4269-b1f1-8e46b7718afc",
      "name": "profile",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "family_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "lastName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "7f135111-f6d9-486d-86a4-024b9a9bc810",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "id.token.claim": "true",
            "jsonType.label": "long",
            "user.attribute": "updatedAt",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "3104ae4c-067f-4e6a-b9e3-53566ef80735",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "website",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "website",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "68e381a3-b707-4f06-b939-a22a1acb78a2",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "given_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "firstName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "9290fb81-f3ee-4b0e-9a49-d1486071d672",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "nickname",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "nickname",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "7539cac1-f631-4dc7-83d8-be6dfceab9ea",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "gender",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "gender",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "7f24db19-24aa-4d3e-a820-dd3b7bff6412",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "zoneinfo",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "52e4f6b5-361f-46ce-a682-d0d257e7956f",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "8ad875e0-4edc-4376-8f0e-2979b05f37bd",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "locale",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "locale",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "1bd33e42-7f14-4a85-ba42-57ef3ac279b3",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "birthdate",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "de07ad6e-92ec-4de3-b363-a9d54687d978",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "username",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "988a0dbb-c415-4a5f-a95a-3f959c52f443",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "profile",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "profile",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "b5fbe2ac-97cc-4733-ad88-dd02bed0daff",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "picture",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "picture",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "30594173-1b4a-4066-8fb9-a522abab321a",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "middleName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "b2b72eca-bdfc-4288-bb8f-064c1599590c",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: phone",
      "id": "e8f34b90-e78f-405e-ba5b-d1eb72af8580",
      "name": "phone",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "phoneNumber",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "48989a70-5b26-43f1-8cdb-fd637cad1b9e",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "id.token.claim": "true",
            "jsonType.label": "boolean",
            "user.attribute": "phoneNumberVerified",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "eb45db94-e184-4a83-8a7d-0d6cc54d87d7",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "description": "OpenID Connect built-in scope: offline_access",
      "id": "555bcdf7-34f3-492e-8467-fa30afa313ea",
      "name": "offline_access",
      "protocol": "openid-connect"
    },
    {
      "attributes": {
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: address",
      "id": "ab3bd0b5-7e4b-496d-8d58-c3267436b8fd",
      "name": "address",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true",
            "user.attribute.country": "country",
            "user.attribute.formatted": "formatted",
            "user.attribute.locality": "locality",
            "user.attribute.postal_code": "postal_code",
            "user.attribute.region": "region",
            "user.attribute.street": "street",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "0bf5d961-5038-4d67-a85b-ffd33acc1eea",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "",
        "display.on.consent.screen": "false",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "id": "22a187cd-ebfd-43f2-b8fe-ca7bcdc4c2cd",
      "name": "web-origins",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {},
          "consentRequired": false,
          "id": "3b9053b0-8298-483f-8985-020809eec2ca",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "description": "SAML role list",
      "id": "214430d8-b52c-42ce-aef8-ffcf272f41bc",
      "name": "role_list",
      "protocol": "saml",
      "protocolMappers": [
        {
          "config": {
            "attribute.name": "Role",
            "attribute.nameformat": "Basic",
            "single": "false"
          },
          "consentRequired": false,
          "id": "2c716a12-4efc-4f84-8826-5fe823b7ae23",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper"
        }
      ]
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "id": "9b209261-4f44-4636-a7d6-dd14dcc676d6",
      "name": "acr",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "85cb90e6-d0d0-4bec-9644-b1d920619ac9",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper"
        }
      ]
    }
  ],
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clients": [
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/realms/WebServices/account/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "account",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "5e692228-ea3e-4ee8-8a02-a12512d05c80",
      "implicitFlowEnabled": false,
      "name": "${client_account}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": true,
      "redirectUris": [
        "/realms/WebServices/account/*"
      ],
      "rootUrl": "${authBaseUrl}",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "pkce.code.challenge.method": "S256",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/realms/WebServices/account/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "account-console",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "d3c9da85-92ea-45e5-b4cb-de70ba95629d",
      "implicitFlowEnabled": false,
      "name": "${client_account-console}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {},
          "consentRequired": false,
          "id": "593cc2c3-10a8-46fd-8843-b4f15a8a0c6a",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper"
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "/realms/WebServices/account/*"
      ],
      "rootUrl": "${authBaseUrl}",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "admin-cli",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "c07f3e53-e392-44cf-81aa-0326c5513dbd",
      "implicitFlowEnabled": false,
      "name": "${client_admin-cli}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": true,
      "redirectUris": [],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": false,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "adminUrl": "",
      "alwaysDisplayInConsole": true,
      "attributes": {
        "backchannel.logout.revoke.offline.tokens": "false",
        "backchannel.logout.session.required": "true",
        "client.secret.creation.time": "1671231763",
        "display.on.consent.screen": "false",
        "login_theme": "keycloak",
        "oauth2.device.authorization.grant.enabled": "false",
        "oidc.ciba.grant.enabled": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "https://api.localhost/docs",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "webservices_api",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "description": "WebServices FastAPI server",
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": true,
      "fullScopeAllowed": true,
      "id": "1eb3e1a2-45cb-4be2-8aa1-210acf6ce252",
      "implicitFlowEnabled": true,
      "name": "WebServices API",
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientId",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientId",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "828b3a8f-ceb9-408a-8280-127c5e072819",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "6f846b5d-cc76-4485-be26-d9a98ee4b6a5",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "8593de16-8a51-4dc3-983f-316ae8c62b66",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        }
      ],
      "publicClient": false,
      "redirectUris": [
        "",
        "https://api.localhost/*"
      ],
      "rootUrl": "https://api.localhost/docs",
      "secret": "${KEYCLOAK_CLIENT_SECRET_KEY}",
      "serviceAccountsEnabled": true,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "",
        "https://webservices.localhost/*",
        "https://api.localhost/*",
        "+"
      ]
    },
    {
      "adminUrl": "",
      "alwaysDisplayInConsole": true,
      "attributes": {
        "access.token.lifespan": "604800",
        "acr.loa.map": "{}",
        "backchannel.logout.revoke.offline.tokens": "false",
        "backchannel.logout.session.required": "true",
        "client.session.max.lifespan": "-1",
        "client_credentials.use_refresh_token": "false",
        "display.on.consent.screen": "false",
        "login_theme": "keycloak",
        "oauth2.device.authorization.grant.enabled": "false",
        "oidc.ciba.grant.enabled": "false",
        "post.logout.redirect.uris": "+",
        "require.pushed.authorization.requests": "false",
        "tls-client-certificate-bound-access-tokens": "false",
        "token.response.type.bearer.lower-case": "false",
        "use.refresh.tokens": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "https://webservices.localhost/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "webservices_webapp",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "description": "WebServices frontend client-side webapps",
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": true,
      "fullScopeAllowed": true,
      "id": "2f295193-e172-46be-8aa8-21c91f35bc53",
      "implicitFlowEnabled": false,
      "name": "WebServices Webapps",
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": true,
      "redirectUris": [
        "https://webservices.localhost/*"
      ],
      "rootUrl": "https://webservices.localhost/",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "",
        "*",
        "+"
      ]
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": true,
      "clientAuthenticatorType": "client-secret",
      "clientId": "broker",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "f47ef517-806d-4999-b7be-b02d37da3a6a",
      "implicitFlowEnabled": false,
      "name": "${client_broker}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": true,
      "clientAuthenticatorType": "client-secret",
      "clientId": "realm-management",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "dd01d987-a8a7-45f7-abf3-cec592a7c038",
      "implicitFlowEnabled": false,
      "name": "${client_realm-management}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "pkce.code.challenge.method": "S256",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/admin/WebServices/console/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "security-admin-console",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "7ad7c89c-6688-4882-bf97-084a211df26a",
      "implicitFlowEnabled": false,
      "name": "${client_security-admin-console}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "locale",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "locale",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "ef9ab421-615a-4bed-a769-32b79c97a21f",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "/admin/WebServices/console/*"
      ],
      "rootUrl": "${authAdminUrl}",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "+"
      ]
    }
  ],
  "components": {
    "org.keycloak.keys.KeyProvider": [
      {
        "config": {
          "priority": [
            "100"
          ]
        },
        "id": "4e6fa596-7fbf-434f-9653-3b43aa8e00a7",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {}
      },
      {
        "config": {
          "algorithm": [
            "RSA-OAEP"
          ],
          "priority": [
            "100"
          ]
        },
        "id": "8fd9b9e9-59d1-4cd3-9529-17ac8e12eb41",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {}
      },
      {
        "config": {
          "priority": [
            "100"
          ]
        },
        "id": "47a224da-c700-4816-b1b6-177f6c43f690",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {}
      },
      {
        "config": {
          "algorithm": [
            "HS256"
          ],
          "priority": [
            "100"
          ]
        },
        "id": "041e2e81-f449-4d03-bc14-822f26e480b6",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {}
      }
    ],
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "config": {},
        "id": "93a356d0-4710-4f8a-a2f2-fcc4c0887026",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-address-mapper",
            "oidc-full-name-mapper",
            "saml-role-list-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper"
          ]
        },
        "id": "997453c2-42e5-4299-9fc2-191a1e27ff5f",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "max-clients": [
            "200"
          ]
        },
        "id": "988e846b-fa7b-4c87-b63c-93bca73cfba8",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {},
        "id": "1fcb6c5a-cec6-43a9-bc53-4075dbc62eae",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-role-list-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-full-name-mapper",
            "saml-user-attribute-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-usermodel-attribute-mapper"
          ]
        },
        "id": "4355010d-d4c4-4ca6-bd2c-806ef558daaa",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subComponents": {},
        "subType": "authenticated"
      },
      {
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        },
        "id": "57e92207-0b69-413e-8f16-fb0d6add26f2",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subComponents": {},
        "subType": "authenticated"
      },
      {
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        },
        "id": "99f55d01-ac6f-4f6d-abe2-1bfa344823a8",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "client-uris-must-match": [
            "true"
          ],
          "host-sending-registration-request-must-match": [
            "true"
          ]
        },
        "id": "92ceafae-0500-4051-bb16-84484d5f5e66",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subComponents": {},
        "subType": "anonymous"
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "config": {},
        "id": "dec93936-63af-4689-a309-fe182f457959",
        "providerId": "declarative-user-profile",
        "subComponents": {}
      }
    ]
  },
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr"
  ],
  "defaultLocale": "en",
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "defaultRole": {
    "clientRole": false,
    "composite": true,
    "containerId": "fab4d16b-2911-4ba8-b370-de9bae7a90c1",
    "description": "${role_default-roles}",
    "id": "9b17b59d-b6cf-41a2-88b5-bc3ec364672d",
    "name": "default-roles-webservices"
  },
  "defaultSignatureAlgorithm": "RS256",
  "directGrantFlow": "direct grant",
  "dockerAuthenticationFlow": "docker auth",
  "duplicateEmailsAllowed": false,
  "editUsernameAllowed": true,
  "enabled": true,
  "enabledEventTypes": [],
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "failureFactor": 30,
  "groups": [
    {
      "attributes": {},
      "clientRoles": {},
      "id": "ae24b365-36da-4b86-9d81-5f2f7f959c10",
      "name": "admins",
      "path": "/admins",
      "realmRoles": [],
      "subGroups": []
    },
    {
      "attributes": {},
      "clientRoles": {},
      "id": "79f4d618-34c9-4aac-8936-c0fa9b353957",
      "name": "users",
      "path": "/users",
      "realmRoles": [],
      "subGroups": []
    }
  ],
  "id": "fab4d16b-2911-4ba8-b370-de9bae7a90c1",
  "identityProviderMappers": [],
  "identityProviders": [
    {
      "addReadTokenRoleOnCreate": false,
      "alias": "google",
      "authenticateByDefault": false,
      "config": {
        "acceptsPromptNoneForwardFromClient": "false",
        "clientId": "56466872579-pm5p1f3v72dpiu7jposnas0s16sa4cen.apps.googleusercontent.com",
        "clientSecret": "${GOOGLE_CLIENT_SECRET}",
        "disableUserInfo": "false",
        "guiOrder": "1",
        "hideOnLoginPage": "false",
        "hostedDomain": "*",
        "offlineAccess": "false",
        "syncMode": "IMPORT",
        "userIp": "true"
      },
      "enabled": true,
      "firstBrokerLoginFlowAlias": "first broker login",
      "internalId": "1efce462-82b0-4c0f-bd37-c0dd143a804c",
      "linkOnly": false,
      "providerId": "google",
      "storeToken": false,
      "trustEmail": false,
      "updateProfileFirstLoginMode": "on"
    },
    {
      "addReadTokenRoleOnCreate": false,
      "alias": "github",
      "authenticateByDefault": false,
      "config": {
        "acceptsPromptNoneForwardFromClient": "false",
        "clientId": "09b8e01da949bf53cdc9",
        "clientSecret": "${GITHUB_CLIENT_SECRET}",
        "disableUserInfo": "false",
        "guiOrder": "2",
        "hideOnLoginPage": "false",
        "syncMode": "IMPORT"
      },
      "enabled": true,
      "firstBrokerLoginFlowAlias": "first broker login",
      "internalId": "40f5d3d4-d7d6-4b8f-9d74-f2babfa2824b",
      "linkOnly": false,
      "providerId": "github",
      "storeToken": false,
      "trustEmail": false,
      "updateProfileFirstLoginMode": "on"
    }
  ],
  "internationalizationEnabled": true,
  "keycloakVersion": "20.0.2",
  "loginWithEmailAllowed": true,
  "maxDeltaTimeSeconds": 43200,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "notBefore": 0,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespan": 5184000,
  "offlineSessionMaxLifespanEnabled": false,
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyCodeReusable": false,
  "otpPolicyDigits": 6,
  "otpPolicyInitialCounter": 0,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyType": "totp",
  "otpSupportedApplications": [
    "totpAppGoogleName",
    "totpAppFreeOTPName"
  ],
  "passwordPolicy": "length(8) and passwordBlacklist(10_million_password_list_top_100000.txt) and specialChars(1) and lowerCase(1) and upperCase(1) and digits(1) and forceExpiredPasswordChange(90) and notUsername(undefined) and notEmail(undefined) and recoveryCodesWarningThreshold(4)",
  "permanentLockout": false,
  "quickLoginCheckMilliSeconds": 1000,
  "realm": "WebServices",
  "refreshTokenMaxReuse": 0,
  "registrationAllowed": true,
  "registrationEmailAsUsername": true,
  "registrationFlow": "registration",
  "rememberMe": true,
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Configure OTP",
      "priority": 10,
      "providerId": "CONFIGURE_TOTP"
    },
    {
      "alias": "terms_and_conditions",
      "config": {},
      "defaultAction": false,
      "enabled": false,
      "name": "Terms and Conditions",
      "priority": 20,
      "providerId": "terms_and_conditions"
    },
    {
      "alias": "UPDATE_PASSWORD",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update Password",
      "priority": 30,
      "providerId": "UPDATE_PASSWORD"
    },
    {
      "alias": "UPDATE_PROFILE",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update Profile",
      "priority": 40,
      "providerId": "UPDATE_PROFILE"
    },
    {
      "alias": "VERIFY_EMAIL",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Verify Email",
      "priority": 50,
      "providerId": "VERIFY_EMAIL"
    },
    {
      "alias": "delete_account",
      "config": {},
      "defaultAction": false,
      "enabled": false,
      "name": "Delete Account",
      "priority": 60,
      "providerId": "delete_account"
    },
    {
      "alias": "CONFIGURE_RECOVERY_AUTHN_CODES",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Recovery Authentication Codes",
      "priority": 70,
      "providerId": "CONFIGURE_RECOVERY_AUTHN_CODES"
    },
    {
      "alias": "webauthn-register",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Webauthn Register",
      "priority": 70,
      "providerId": "webauthn-register"
    },
    {
      "alias": "webauthn-register-passwordless",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Webauthn Register Passwordless",
      "priority": 80,
      "providerId": "webauthn-register-passwordless"
    },
    {
      "alias": "update_user_locale",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update User Locale",
      "priority": 1000,
      "providerId": "update_user_locale"
    }
  ],
  "requiredCredentials": [
    "password"
  ],
  "resetCredentialsFlow": "reset credentials",
  "resetPasswordAllowed": true,
  "revokeRefreshToken": false,
  "roles": {
    "client": {
      "account": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "5e692228-ea3e-4ee8-8a02-a12512d05c80",
          "description": "${role_view-applications}",
          "id": "506cde80-0b52-4e1d-ab3b-e6f407db32d8",
          "name": "view-applications"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "containerId": "5e692228-ea3e-4ee8-8a02-a12512d05c80",
          "description": "${role_manage-account}",
          "id": "809c5297-8dca-4ed8-b70e-4fedcaf3c42e",
          "name": "manage-account"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "5e692228-ea3e-4ee8-8a02-a12512d05c80",
          "description": "${role_delete-account}",
          "id": "8a2a91b6-6467-400a-9690-7aa6bc955b56",
          "name": "delete-account"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "containerId": "5e692228-ea3e-4ee8-8a02-a12512d05c80",
          "description": "${role_manage-consent}",
          "id": "39d4c6b9-0e53-4b52-9d8e-c0c7d02c5d0f",
          "name": "manage-consent"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "5e692228-ea3e-4ee8-8a02-a12512d05c80",
          "description": "${role_view-consent}",
          "id": "210c68c8-c8bc-4ec2-84b7-923f71e151e3",
          "name": "view-consent"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "5e692228-ea3e-4ee8-8a02-a12512d05c80",
          "description": "${role_view-groups}",
          "id": "f13b8c80-339a-4f63-9adb-ce948226078d",
          "name": "view-groups"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "5e692228-ea3e-4ee8-8a02-a12512d05c80",
          "description": "${role_manage-account-links}",
          "id": "2010bf77-6d75-42cb-9806-1f25d3303cc3",
          "name": "manage-account-links"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "5e692228-ea3e-4ee8-8a02-a12512d05c80",
          "description": "${role_view-profile}",
          "id": "acca44ed-a412-403d-ab6b-c3ea01e6e649",
          "name": "view-profile"
        }
      ],
      "account-console": [],
      "admin-cli": [],
      "broker": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "f47ef517-806d-4999-b7be-b02d37da3a6a",
          "description": "${role_read-token}",
          "id": "ab74bb25-ca1b-4425-b60e-69ec4ba4e541",
          "name": "read-token"
        }
      ],
      "realm-management": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "dd01d987-a8a7-45f7-abf3-cec592a7c038",
          "description": "${role_query-groups}",
          "id": "84f47235-e345-4758-b30a-6fbf47a864b6",
          "name": "query-groups"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "dd01d987-a8a7-45f7-abf3-cec592a7c038",
          "description": "${role_view-authorization}",
          "id": "1885c822-42ac-4174-9b51-907a872b6ff8",
          "name": "view-authorization"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "containerId": "dd01d987-a8a7-45f7-abf3-cec592a7c038",
          "description": "${role_view-clients}",
          "id": "1bb125b7-8734-4ef2-a91c-0f4c07c8f4ee",
          "name": "view-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "dd01d987-a8a7-45f7-abf3-cec592a7c038",
          "description": "${role_manage-authorization}",
          "id": "aa5ec2b6-0dde-42e2-9cd2-7bd60e5a2625",
          "name": "manage-authorization"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "dd01d987-a8a7-45f7-abf3-cec592a7c038",
          "description": "${role_view-identity-providers}",
          "id": "fe41f56f-6704-4993-8c20-1a09e3752798",
          "name": "view-identity-providers"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "dd01d987-a8a7-45f7-abf3-cec592a7c038",
          "description": "${role_manage-events}",
          "id": "9bc82a0f-6a90-48ef-829f-5405671391c0",
          "name": "manage-events"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "dd01d987-a8a7-45f7-abf3-cec592a7c038",
          "description": "${role_manage-clients}",
          "id": "aa1fa61c-8103-498f-b03c-de07067ab22b",
          "name": "manage-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "dd01d987-a8a7-45f7-abf3-cec592a7c038",
          "description": "${role_manage-realm}",
          "id": "3c8d0a92-fcb9-4d53-869e-c9bce2fa3d03",
          "name": "manage-realm"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "view-authorization",
                "view-clients",
                "manage-authorization",
                "view-identity-providers",
                "manage-events",
                "manage-clients",
                "manage-realm",
                "view-events",
                "manage-identity-providers",
                "query-clients",
                "manage-users",
                "impersonation",
                "query-users",
                "create-client",
                "query-realms",
                "view-users",
                "view-realm"
              ]
            }
          },
          "containerId": "dd01d987-a8a7-45f7-abf3-cec592a7c038",
          "description": "${role_realm-admin}",
          "id": "78dc9826-4f90-453d-a7f4-5bedc62d54f6",
          "name": "realm-admin"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "dd01d987-a8a7-45f7-abf3-cec592a7c038",
          "description": "${role_view-events}",
          "id": "dca2091b-945f-4d82-ab6d-42d4b7fca65d",
          "name": "view-events"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "dd01d987-a8a7-45f7-abf3-cec592a7c038",
          "description": "${role_manage-identity-providers}",
          "id": "0691d086-15a4-4e94-9932-c32915af4580",
          "name": "manage-identity-providers"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "dd01d987-a8a7-45f7-abf3-cec592a7c038",
          "description": "${role_query-clients}",
          "id": "0ad0ebcd-4a10-406f-8947-62cc589a1d52",
          "name": "query-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "dd01d987-a8a7-45f7-abf3-cec592a7c038",
          "description": "${role_manage-users}",
          "id": "9a65069f-a3be-4a2f-9724-05712b25a597",
          "name": "manage-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "dd01d987-a8a7-45f7-abf3-cec592a7c038",
          "description": "${role_impersonation}",
          "id": "1e61e421-883e-4e06-94cd-6220d60f5eae",
          "name": "impersonation"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "dd01d987-a8a7-45f7-abf3-cec592a7c038",
          "description": "${role_query-users}",
          "id": "d1deb2c9-ffed-4c4b-b636-ef4022a8162d",
          "name": "query-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "dd01d987-a8a7-45f7-abf3-cec592a7c038",
          "description": "${role_create-client}",
          "id": "62cbed10-eb71-49dd-8cd6-65ebb0526f05",
          "name": "create-client"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "dd01d987-a8a7-45f7-abf3-cec592a7c038",
          "description": "${role_query-realms}",
          "id": "6457ffda-17c7-4dab-a61c-04868f24b053",
          "name": "query-realms"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "containerId": "dd01d987-a8a7-45f7-abf3-cec592a7c038",
          "description": "${role_view-users}",
          "id": "18bcee45-1ad0-4321-bc61-3fb3e3029197",
          "name": "view-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "dd01d987-a8a7-45f7-abf3-cec592a7c038",
          "description": "${role_view-realm}",
          "id": "c85a4cf8-5b5c-4441-b67f-590cba163a16",
          "name": "view-realm"
        }
      ],
      "security-admin-console": [],
      "webservices_api": [],
      "webservices_webapp": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "2f295193-e172-46be-8aa8-21c91f35bc53",
          "description": "Client side public webapps",
          "id": "72ce7429-5318-474b-9f1a-cfd4812e9623",
          "name": "webapp"
        }
      ]
    },
    "realm": [
      {
        "attributes": {},
        "clientRole": false,
        "composite": true,
        "composites": {
          "client": {
            "account": [
              "manage-account",
              "view-profile"
            ]
          },
          "realm": [
            "offline_access",
            "uma_authorization"
          ]
        },
        "containerId": "fab4d16b-2911-4ba8-b370-de9bae7a90c1",
        "description": "${role_default-roles}",
        "id": "9b17b59d-b6cf-41a2-88b5-bc3ec364672d",
        "name": "default-roles-webservices"
      },
      {
        "attributes": {},
        "clientRole": false,
        "composite": false,
        "containerId": "fab4d16b-2911-4ba8-b370-de9bae7a90c1",
        "description": "${role_offline-access}",
        "id": "62547d5f-99f9-44ea-bfc2-e26607f5880f",
        "name": "offline_access"
      },
      {
        "attributes": {},
        "clientRole": false,
        "composite": false,
        "containerId": "fab4d16b-2911-4ba8-b370-de9bae7a90c1",
        "description": "${role_uma_authorization}",
        "id": "4feabf09-5cbb-4910-882e-7cfb5ee60927",
        "name": "uma_authorization"
      }
    ]
  },
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "smtpServer": {},
  "sslRequired": "external",
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionMaxLifespanRememberMe": 0,
  "supportedLocales": [
    "de",
    "en"
  ],
  "userManagedAccessAllowed": false,
  "users": [
    {
      "createdTimestamp": 1671231763588,
      "disableableCredentialTypes": [],
      "emailVerified": false,
      "enabled": true,
      "groups": [],
      "id": "1d7414b5-facf-4349-b7a1-4ca2bf30e43f",
      "notBefore": 0,
      "realmRoles": [
        "default-roles-webservices"
      ],
      "requiredActions": [],
      "serviceAccountClientId": "webservices_api",
      "totp": false,
      "username": "service-account-webservices_api"
    }
  ],
  "verifyEmail": false,
  "waitIncrementSeconds": 60,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicyRpId": "",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyUserVerificationRequirement": "not specified"
}

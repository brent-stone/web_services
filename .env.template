# THIS IS AN EXAMPLE .env FOR STARTING THE DEPLOYMENT
# initialize_env_and_cert.sh will auto-generate a version of this template with SSL
# certs and passwords!

# General Settings
DEBUG=false
# Uvicorn gateway and API logging settings
# Uvicorn log level values: 'critical', 'error', 'warning', 'info', 'debug'
LOG_LEVEL=warning
# React Frontend Settings
HTTP_PORT=57080
HTTPS_PORT=57443
# FastAPI Settings
API_PORT=57073
PROJECT_NAME=WebServices
PROJECT_VERSION=0.2.0
DEFAULT_USERNAME=webservices
DEFAULT_USER_PASS=<REPLACE-ME>
DEFAULT_EMAIL=contact@webservices.com
HASH_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=10080
BACKEND_CORS_ORIGINS=["https://localhost:443","https://WebServices.localhost","https://keylcoak.localhost","http://WebServices-proxy","https://WebServices-proxy","http://webservices-web","https://webservices-web","http://webservices-web-dev","https://webservices-web-dev"]
BACKEND_CORS_ORIGINS_TRAEFIK=https://localhost:443,https://webservices.localhost,https://keycloak.localhost,http://webservices-proxy,https://webservices-proxy,http://webservices-web,https://webservices-web,http://webservices-web-dev,https://webservices-web-dev
SECRET_KEY=<REPLACE-ME>
# These variables control the keycloak connection timeout and retry behavior of the /backend services
KEYCLOAK_LOGIN_WAIT_SEC=3
KEYCLOAK_LOGIN_RETRY_COUNT=10
# SQLAlchemy 2.0 migration specific warning flag
# remove once SQLAlchemy is officially updated to 2.0
SQLALCHEMY_WARN_20=1
# Postgres Settings (also used by FastAPI)
POSTGRES_USER=webservices
POSTGRES_PASSWORD=<REPLACE-ME>
POSTGRES_DB=webservices
POSTGRES_SERVER=db
POSTGRES_PORT=57074
# Postgres Adminer dashboard settings (dev only)
ADMINER_PORT=57075
# Redis (Celery) Settings
REDIS_HOST=redis
REDIS_PASSWORD=<REPLACE-ME>
REDIS_PORT=57076
REDIS_DB=db
CELERY_BROKER_URL=redis://redis/0
CELERY_RESULT_BACKEND=redis://redis/0
# Redis (Celery) Flower dashboard settings (dev only)
FLOWER_PORT=57077
# Official Keycloak Image Settings
KC_HOSTNAME=keycloak.localhost
KC_HTTP_PORT=57081
KC_HTTPS_PORT=57444
KC_DB=postgres
KC_DB_USERNAME=webservices_keycloak
KC_DB_PASSWORD=<REPLACE-ME>
KC_DB_URL_HOST=db
KC_DB_URL_PORT=5432
KC_DB_URL_DATABASE=webservices_keycloak
KC_DB_SCHEMA=public
KEYCLOAK_ADMIN=webservices_keycloak_admin
KEYCLOAK_ADMIN_PASSWORD=<REPLACE-ME>
KC_TRANSACTION_XA_ENABLED=true
KC_HEALTH_ENABLED=true
KC_METRICS_ENABLED=true
# https://www.keycloak.org/server/features#_supported_features
KC_FEATURES=account2,admin2,ciba,par,authorization,recovery-codes,client-secret-rotation
KC_HTTPS_TRUST_STORE_PASSWORD=<REPLACE-ME>
# Reverse Proxy configuration
KC_PROXY=passthrough
# Bespoke Keycloak configuration settings
KEYCLOAK_HOSTNAME=keycloak
KC_HTTPS_CERTIFICATE_FILE=/opt/keycloak/conf/webservices.crt
KC_HTTPS_CERTIFICATE_KEY_FILE=/opt/keycloak/conf/webservices.key
# These variables are referenced in the /keycloak/realm_backup/realm-export.json
KEYCLOAK_CLIENT_SECRET_KEY=<REPLACE-ME>
GOOGLE_CLIENT_SECRET=<REPLACE-ME>
GITHUB_CLIENT_SECRET=<REPLACE-ME>
# Traefik Settings and Labels
DOMAIN=localhost
TRAEFIK_PUBLIC_NETWORK=traefik-public
TRAEFIK_TAG=webservices
TRAEFIK_PUBLIC_TAG=traefik-public
# Docker Swarm Settings
STACK_NAME=webservices-com
